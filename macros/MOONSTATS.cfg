[gcode_macro GET_POSITION_STATS]
gcode:
    {% set config = printer.configfile.config %}
    RESPOND MSG="Homed Axis: "{printer.toolhead.homed_axes}
    {% if "xyz" in printer.toolhead.homed_axes %}
        GET_POSITION
        RESPOND MSG="Live Position: "{printer.motion_report.live_position}
        RESPOND MSG="Gcode Position: X"{printer.gcode_move.gcode_position.x}", Y"{printer.gcode_move.gcode_position.y}", Z"{printer.gcode_move.gcode_position.z}, E"{printer.gcode_move.gcode_position.e}
        RESPOND MSG="Stalls: "{printer.toolhead.stalls}
        RESPOND MSG="Minimum Position: X"{printer.toolhead.axis_minimum.x}", Y"{printer.toolhead.axis_minimum.y}", Z"{printer.toolhead.axis_minimum.z}
        RESPOND MSG="Maximum Position: X"{printer.toolhead.axis_maximum.x}", Y"{printer.toolhead.axis_maximum.y}", Z"{printer.toolhead.axis_maximum.z}
        RESPOND MSG="Maximum Velocity: "{printer.toolhead.max_velocity}
        RESPOND MSG="Maximum Acceleration: "{printer.toolhead.max_accel}
        RESPOND MSG="Maximum Accel-to-Decel: "{printer.toolhead.max_accel_to_decel}
        RESPOND MSG="Square Corner Velocity: "{printer.toolhead.square_corner_velocity}
        RESPOND MSG="Live Velocity: "{printer.motion_report.live_velocity}
        RESPOND MSG="Gcode Speed: "{printer.gcode_move.speed}"mm/s"
        RESPOND MSG="Gcode Speed Factor: "{(printer.gcode_move.speed_factor * 100)}"%"
        RESPOND MSG="Gcode Extrude Factor: "{(printer.gcode_move.extrude_factor * 100)}"%"
        RESPOND MSG="Absolute Positioning: "{printer.gcode_move.absolute_coordinates}
        RESPOND MSG="Absolute Extrusion: "{printer.gcode_move.absolute_extrude}
        GET_PROBE_LIMITS
        {% if printer.quad_gantry_level %}
            RESPOND MSG="Quad gantry Level Applied: "{printer.quad_gantry_level.applied}
        {% endif %}
        {% if printer.z_tilt %}
            RESPOND MSG="Z-Tilt Applied: "{printer.z_tilt.applied}
        {% endif %}
        {% if printer.bed_mesh %}
            {% set bed_mesh = printer.bed_mesh %}
            RESPOND MSG="Bed Mesh Profile: "{bed_mesh.profile_name}
            RESPOND MSG="Bed Mesh Min: "{bed_mesh.mesh_min}
            RESPOND MSG="Bed Mesh Max: "{bed_mesh.mesh_max}
        {% endif %}
        {% if printer.filament_switch_sensor %}
            {% set fil_sensor = printer.filament_switch_sensor %}
            RESPOND MSG="Filament Sensor Enabled: "{fil_sensor.enabled}
            RESPOND MSG="Filament Detected: "{fil_sensor.filament_detected}
        {% endif %}
        {% if printer.filament_motion_sensor %}
            {% set fil_sensor = printer.filament_motion_sensor %}
            RESPOND MSG="Filament Sensor Enabled: "{fil_sensor.enabled}
            RESPOND MSG="Filament Detected: "{fil_sensor.filament_detected}
        {% endif %}
        {% set extruder = printer[printer.toolhead.extruder] %}
        RESPOND MSG="Extruder Temperature: "{extruder.temerature}
        RESPOND MSG="Extruder Target Temp: "{extruder.target}
        #TODO Support different combinations. Currently assumes all drivers are the same.
        {% if config["tmc2130"] %}
            {% set driver_x = config["tmc2130 stepper_x"] %}
            {% set driver_y = config["tmc2130 stepper_y"] %}
            {% set driver_z = config["tmc2130 stepper_z"] %}
            {% set driver_e = config["tmc2130 extruder"] %}
        {% elif config["tmc2208"] %}
            {% set driver_x = config["tmc2130 stepper_x"] %}
            {% set driver_y = config["tmc2130 stepper_y"] %}
            {% set driver_z = config["tmc2130 stepper_z"] %}
            {% set driver_e = config["tmc2130 extruder"] %}
        {% elif config["tmc2209"] %}
            {% set driver_x = config["tmc2130 stepper_x"] %}
            {% set driver_y = config["tmc2130 stepper_y"] %}
            {% set driver_z = config["tmc2130 stepper_z"] %}
            {% set driver_e = config["tmc2130 extruder"] %}
        {% elif config["tmc2660"] %}
            {% set driver_x = config["tmc2130 stepper_x"] %}
            {% set driver_y = config["tmc2130 stepper_y"] %}
            {% set driver_z = config["tmc2130 stepper_z"] %}
            {% set driver_e = config["tmc2130 extruder"] %}
        {% elif config["tmc5160"] %}
            {% set driver_x = config["tmc2130 stepper_x"] %}
            {% set driver_y = config["tmc2130 stepper_y"] %}
            {% set driver_z = config["tmc2130 stepper_z"] %}
            {% set driver_e = config["tmc2130 extruder"] %}
        {% else %}
            {% set driver = 0 %}
        {% endif %}
        {% if driver != 0 %}
            RESPOND MSG="X Stepper Run Current: "{driver_x.run_current}
            RESPOND MSG="X Stepper Hold Current: "{driver_x.hold_current}
            RESPOND MSG="Y Stepper Run Current: "{driver_y.run_current}
            RESPOND MSG="Y Stepper Hold Current: "{driver_y.hold_current}
            RESPOND MSG="Z Stepper Run Current: "{driver_z.run_current}
            RESPOND MSG="Z Stepper Hold Current: "{driver_z.hold_current}
            RESPOND MSG="Extruder Run Current: "{driver_e.run_current}
            RESPOND MSG="Extruder Hold Current: "{driver_e.hold_current}
        {% endif %}

    {% else %}
        RESPOND TYPE=error MSG="All axis must be homed to retrieve position stats."
    {% endif %}

[gcode_macro GET_SYS_INFO]
gcode:
    {% set load = printer.system_stats.sysload %}
    RESPOND MSG="Load: "{load}
    {% set cputime = printer.system_stats.cputime %}
    RESPOND MSG="CPU: "{cputime}"%"
    {% set memavail = printer.system_stats.memavail %}
    RESPOND MSG="Free Mem: "{memavail}" B"