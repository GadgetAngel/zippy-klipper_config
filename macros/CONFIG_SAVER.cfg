### CONFIG SAVER ###
# 
# This macro will check if a SAVE_CONFIG is pending.
# If so, it will perform the SAVE_CONFIG command.
# 
# There are options to filter for only specific pending saves.
# 
# A SHUTDOWN option is also included which will perform shutdown
# commands *after* the SAVE_CONFIG is executed.
# 
# This allows for automated SAVE_CONFIG actions that don't result in
# the printer restarting and left idle after a print completes.
# Variables are used to prevent shutdown loops after every restart.
# 
# This effectively allows for a customizable automated wrapper of SAVE_CONFIG that
# supports "Save and Shutdown" in addition to the traditional "Save and Restart" 


[gcode_macro SAVE_AND_RESTART]
description: Save pending config changes and restart.
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set config = printer.configfile %}
    {% set pending = config.save_config_pending %}
    {% set items = config.save_config_pending_items %}

    {% set SHUTDOWN = params.SHUTDOWN|default(0)|int %}
    {% set FILTER = params.FILTER|default(0) %}
    
    {% if pending %} # If SAVE_CONFIG pending
        # Handle SHUTDOWN parameter
        {% if SHUTDOWN > 0 %}
            SAVE_VARIABLE VARIABLE=boot_shutdown VALUE=1
        {% else %}
            SAVE_VARIABLE VARIABLE=boot_shutdown VALUE=0
        {% endif %}
        # Handle FILTER parameter
        {% if FILTER !=0 %}
            #TODO Filter handling
        {% endif %}

        #TODO Debugging output:
        RESPOND MSG="A Save is pending."
        RESPOND MSG="Pending items: {items}"
        SAVE_CONFIG
    {% else %} # No SAVE_CONFIG pending
        RESPOND MSG="No Save is pending."
    {% endif %}

[delayed_gcode boot_to_shutdown]
# Handles shutdown after SAVE_CONFIG restart
initial_duration: 5
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set boot_shutdown = svv.boot_shutdown|int %}
    SAVE_VARIABLE VARIABLE=boot_shutdown VALUE=0
    {% if boot_shutdown == 1 %} 
        _POWER_OFF_SLOW
    {% endif %}