[server]
host: 0.0.0.0
port: 7125
enable_debug_logging: False
temperature_store_size: 600
gcode_store_size: 1000

[authorization]
force_logins: True
cors_domains:
  *.local
  *.lan
  *://app.fluidd.xyz

trusted_clients:
  10.0.0.0/8
  127.0.0.0/8
  169.254.0.0/16
  172.16.0.0/12
  192.168.0.0/16
  FE80::/10
  ::1/128


[file_manager]
enable_object_processing: True
queue_gcode_uploads: True
config_path: /home/pi/klipper_config
log_path: ~/klipper_logs

[secrets]
secrets_path: ~/klipper_config/moonraker_secrets.ini

[job_queue]
load_on_startup: True
  
[mqtt]
address: 192.168.86.210
username: {secrets.mqtt_credentials.username}
password: {secrets.mqtt_credentials.password}
enable_moonraker_api: True
status_objects:
  webhooks
  toolhead=position,homed_axes
  extruder=temperature,target
  heater_bed=temperature,target
  print_stats
  filament_sensor

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# this enables moonraker's update manager
[update_manager]
enable_auto_refresh: True
channel: dev

# this enabled fluidd updates
[update_manager client fluidd]
type: web
repo: cadriel/fluidd
path: ~/fluidd

# this enabled mainsail updates
[update_manager mainsail]
type: web
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh

[update_manager client moonraker-telegram]
type: git_repo
path: /home/pi/moonraker-telegram
origin: https://github.com/Raabi91/moonraker-telegram.git
env: /home/pi/.moonraker-telegram-env/bin/python
requirements: scripts/moonraker-telegram-requirements.txt
install_script: scripts/install.sh

[update_manager client MoonCord]
type: git_repo
path: /home/pi/mooncord
origin: https://github.com/eliteschwein/mooncord.git
install_script: scripts/install.sh
enable_node_updates: True

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git

[wled Lighting]
type: http
address: 192.168.86.48
initial_preset: 1
chain_count: 56

[power Printer]
type: tasmota
address: 192.168.86.36
off_when_shutdown: True
locked_while_printing: True
on_when_job_queued: True
bound_service: klipper

[power Lights]
type: mqtt
command_topic: wled/wled-3d
command_payload:
    {% if command == "on" %}
        ON
    {% else %}
        OFF
    {% endif %}
retain_command_state: True
query_after_command: False
off_when_shutdown: True
off_when_shutdown_delay: 3
on_when_job_queued: True
state_topic: wled/wled-3d/g
state_response_template:
    {% set resp = payload|int %}
    {% if resp > 0 %}
        ON
    {% else %}
        OFF
    {% endif %}

[timelapse]
##   Following basic configuration is default to most images and don't need
##   to be changed in most scenarios. Only uncomment and change it if your
##   Image differ from standart installations. In most common scenarios 
##   a User only need [timelapse] in there configuration.
#output_path: ~/timelapse/
##   Directory where the generated video will be saved
#frame_path: /tmp/timelapse/
##   Directory where the temporary frames are saved
#ffmpeg_binary_path: /usr/bin/ffmpeg
##   Directory where ffmpeg is installed
